export enum KpcInstructionType {
    Nop = "No operation",
    Lbrom = "Load byte ROM",
    Lbromo = "Load byte ROM offset",
    Lwrom = "Load word ROM",
    Lwromo = "Load word ROM offset",
    Lbram = "Load byte RAM",
    Lbramo = "Load byte RAM offset",
    Lwram = "Load word RAM",
    Lwramo = "Load word RAM offset",
    Popb = "Pop byte",
    Popw = "Pop word",
    Lbext = "Load byte external",
    Sbram = "Store byte RAM",
    SbramI = "Store byte RAM immediate",
    Sbramo = "Store byte RAM offset",
    Swram = "Store word RAM",
    Swramo = "Store word RAM offset",
    Pushb = "Push byte",
    Pushw = "Push word",
    Sbext = "Store byte external",
    Add = "Add",
    AddI = "Add immediate",
    Sub = "Subtract",
    SubI = "Subtract immediate",
    Addw = "Add word with carry",
    Negw = "Negate word with carry",
    Not = "Bitwise NOT",
    Or = "Bitwise OR",
    And = "Bitwise AND",
    Xor = "Bitwise XOR",
    Sll = "Shift left logical",
    Srl = "Shift right logical",
    Set = "Set",
    SetI = "Set low immediate",
    Seth = "Set high",
    SethI = "Set high immediate",
    Setw = "Set word",
    Setloh = "Set low to high and high to low",
    Swap = "Swap low",
    Swaph = "Swap high",
    Swapw = "Swap word",
    Swaploh = "Swap low with high and high with low",
    Jr = "Jump register",
    Jro = "Jump register offset",
    Jas = "Jump and save",
    JpcaddI = "Jump program counter add immediate",
    JpcsubI = "Jump program counter sub immediate",
    Irrret = "Interrupt return",
    Irren = "Interrupt enable",
    Irrdis = "Interrupt disable",
    Jwz = "Jump word zero",
    Jwnotz = "Jump word not zero",
    Jwn = "Jump word negative",
    Jwnotn = "Jump word not negative",
    Jzf = "Jump zero flag (disable interrupts first!)",
    Jnf = "Jump negative flag (disable interrupts first!)",
    Jcf = "Jump carry flag (disable interrupts first!)",
    Jof = "Jump overflow flag (disable interrupts first!)",
}